/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.miriamcg.sparqldisplay;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.jena.atlas.logging.LogCtl;
import org.apache.jena.query.Query;
import org.apache.jena.query.QueryExecution;
import org.apache.jena.query.QueryExecutionFactory;
import org.apache.jena.query.QueryFactory;
import org.apache.jena.query.QueryParseException;
import org.apache.jena.query.QuerySolution;
import org.apache.jena.query.ResultSet;
import org.apache.jena.query.ResultSetFactory;
import org.apache.jena.query.ResultSetFormatter;
import org.apache.jena.rdf.model.Model;
import org.apache.jena.rdf.model.RDFNode;
import org.apache.jena.riot.RDFDataMgr;
import org.apache.jena.sparql.engine.http.QueryEngineHTTP;

/**
 *
 * @author Miriam
 */
public class Application extends javax.swing.JFrame {

    /**
     * Creates new form Application
     */
    
    private String dataFile;
    private String displayPath;
    private Path path;
    private String remoteURL;
    private String prefixRemote;
    private String queryText;
    private String prefix;
    private FileOutputStream file;
    private ResultSet resultDisplay;
    
    public Application() {
        initComponents();
        prefix = "PREFIX dcterms: <http://purl.org/dc/terms/> \n" + "PREFIX bibo: <http://purl.org/ontology/bibo/> \n" + " PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>"
                + "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>";
        prefixRemote = "PREFIX dbpedia-owl: <http://dbpedia.org/ontology/> \n" + "PREFIX dcterms: <http://purl.org/dc/terms/>";
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        selectFileButton = new javax.swing.JButton();
        dataLabel = new javax.swing.JLabel();
        urlTextField = new javax.swing.JTextField();
        urlLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        queryTextArea = new javax.swing.JScrollPane();
        inquiryTextArea = new javax.swing.JTextArea();
        resultTextArea = new javax.swing.JScrollPane();
        displayTextArea = new javax.swing.JTextArea();
        searchButton = new javax.swing.JButton();
        formatComboBox = new javax.swing.JComboBox<>();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setToolTipText("");

        selectFileButton.setText("Abrir");
        selectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButtonActionPerformed(evt);
            }
        });

        dataLabel.setText("Seleccione un fichero de datos  . . .");

        urlLabel.setText("URL Remota (opcional)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(dataLabel)
                .addGap(49, 49, 49)
                .addComponent(selectFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(urlLabel)
                .addGap(12, 12, 12)
                .addComponent(urlTextField)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(urlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(urlLabel)
                    .addComponent(selectFileButton)
                    .addComponent(dataLabel))
                .addGap(19, 19, 19))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        inquiryTextArea.setColumns(20);
        inquiryTextArea.setRows(5);
        inquiryTextArea.setText("Introduzca la consulta . . .");
        inquiryTextArea.setToolTipText("Introduzca su consulta SparQL . . ."); // NOI18N
        queryTextArea.setViewportView(inquiryTextArea);

        displayTextArea.setEditable(false);
        displayTextArea.setColumns(20);
        displayTextArea.setRows(5);
        displayTextArea.setText("Resultado de la consulta");
        displayTextArea.setToolTipText("Resultado de la consulta");
        resultTextArea.setViewportView(displayTextArea);

        searchButton.setText("Generar consulta");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        formatComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "XML", "JSON", "CSV", "TSV" }));

        saveButton.setText("Guardar consulta");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(searchButton)
                .addGap(231, 231, 231)
                .addComponent(formatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(queryTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resultTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(queryTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addComponent(resultTextArea))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(formatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setAcceptAllFileFilterUsed(false);
        fc.setFileFilter(new FileNameExtensionFilter("Turtle", "ttl"));
        fc.setFileFilter(new FileNameExtensionFilter("RDF", "rdf"));
        
        int res = fc.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            dataFile = fc.getSelectedFile().getAbsolutePath();
            System.out.println(dataFile);
        }             
    }//GEN-LAST:event_selectFileButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        if(!dataFile.equals("") && urlTextField.getText().equals("")){
            queryExecution();
        } else if (!urlTextField.getText().equals("")){
            remoteQuery();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  
        int res = fc.showSaveDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            try {
                displayPath = fc.getSelectedFile().toString();
                switch(formatComboBox.getSelectedIndex()){
                    case 0:
                        path = Paths.get(displayPath, "result.xml");
                        file = new FileOutputStream(path.toString());
                        ResultSetFormatter.outputAsXML(file, resultDisplay);
                        break;
                    case 1:
                        path = Paths.get(displayPath, "result.json");
                        file = new FileOutputStream(path.toString());
                        ResultSetFormatter.outputAsJSON(file, resultDisplay);
                        break;
                    case 2:
                        path = Paths.get(displayPath, "result.csv");
                        file = new FileOutputStream(path.toString());
                        ResultSetFormatter.outputAsCSV(file, resultDisplay);
                        break;
                    case 3:
                        path = Paths.get(displayPath, "result.tsv");
                        file = new FileOutputStream(path.toString());
                        ResultSetFormatter.outputAsTSV(file, resultDisplay);
                        break;
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Application.class.getName()).log(Level.SEVERE, null, ex);
            }
        }  
    }//GEN-LAST:event_saveButtonActionPerformed

    private void queryExecution(){
        try{
            LogCtl.setCmdLogging();
            Model data = RDFDataMgr.loadModel(dataFile);
            queryText = prefix + "\n" + inquiryTextArea.getText();
            displayTextArea.setText("");
            System.out.println(queryText);
            QueryExecution execution = QueryExecutionFactory.create(queryText, data);
            
            ResultSet result = execution.execSelect();
            resultDisplay = ResultSetFactory.copyResults(result);
        
            String queryResult = ResultSetFormatter.asText(resultDisplay);
            displayTextArea.append(queryResult);
            
            execution.close();
        } catch (QueryParseException e) {
            displayTextArea.append("Error en sintaxis de la consulta");
            displayTextArea.append("Mensaje: " + e.getMessage());
        }
    }
    private void remoteQuery() {
        try {
            queryText = prefix + "\n" + inquiryTextArea.getText();
            Query inquiry = QueryFactory.create(queryText);
            QueryExecution execution = QueryExecutionFactory.sparqlService(remoteURL, queryText);

            ResultSet result = execution.execSelect();
            resultDisplay = ResultSetFactory.copyResults(result);
        
            String queryResult = ResultSetFormatter.asText(resultDisplay);
            displayTextArea.append(queryResult);
            
            execution.close();
        } catch (QueryParseException e) {
            displayTextArea.append("Error en sintaxis de la consulta");
            displayTextArea.append("Mensaje: " + e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Application().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dataLabel;
    private javax.swing.JTextArea displayTextArea;
    private javax.swing.JComboBox<String> formatComboBox;
    private javax.swing.JTextArea inquiryTextArea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane queryTextArea;
    private javax.swing.JScrollPane resultTextArea;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton selectFileButton;
    private javax.swing.JLabel urlLabel;
    private javax.swing.JTextField urlTextField;
    // End of variables declaration//GEN-END:variables
}
